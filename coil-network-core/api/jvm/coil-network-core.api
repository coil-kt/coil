public abstract interface class coil3/network/CacheStrategy {
	public static final field Companion Lcoil3/network/CacheStrategy$Companion;
	public static final field DEFAULT Lcoil3/network/CacheStrategy;
	public abstract fun read (Lcoil3/network/NetworkResponse;Lcoil3/network/NetworkRequest;Lcoil3/request/Options;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun write (Lcoil3/network/NetworkResponse;Lcoil3/network/NetworkRequest;Lcoil3/network/NetworkResponse;Lcoil3/request/Options;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class coil3/network/CacheStrategy$Companion {
}

public final class coil3/network/CacheStrategy$ReadResult {
	public fun <init> (Lcoil3/network/NetworkRequest;)V
	public fun <init> (Lcoil3/network/NetworkResponse;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getRequest ()Lcoil3/network/NetworkRequest;
	public final fun getResponse ()Lcoil3/network/NetworkResponse;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class coil3/network/CacheStrategy$WriteResult {
	public static final field Companion Lcoil3/network/CacheStrategy$WriteResult$Companion;
	public static final field DISABLED Lcoil3/network/CacheStrategy$WriteResult;
	public fun <init> (Lcoil3/network/NetworkResponse;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getResponse ()Lcoil3/network/NetworkResponse;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class coil3/network/CacheStrategy$WriteResult$Companion {
}

public abstract interface class coil3/network/ConnectivityChecker {
	public static final field Companion Lcoil3/network/ConnectivityChecker$Companion;
	public static final field ONLINE Lcoil3/network/ConnectivityChecker;
	public abstract fun isOnline ()Z
}

public final class coil3/network/ConnectivityChecker$Companion {
}

public final class coil3/network/ConnectivityCheckerKt {
	public static final fun ConnectivityChecker (Lcoil3/PlatformContext;)Lcoil3/network/ConnectivityChecker;
}

public final class coil3/network/HttpException : java/lang/RuntimeException {
	public fun <init> (Lcoil3/network/NetworkResponse;)V
	public final fun getResponse ()Lcoil3/network/NetworkResponse;
}

public final class coil3/network/ImageRequestsKt {
	public static final fun getHttpBody (Lcoil3/Extras$Key$Companion;)Lcoil3/Extras$Key;
	public static final fun getHttpBody (Lcoil3/request/ImageRequest;)Lcoil3/network/NetworkRequestBody;
	public static final fun getHttpBody (Lcoil3/request/Options;)Lcoil3/network/NetworkRequestBody;
	public static final fun getHttpHeaders (Lcoil3/Extras$Key$Companion;)Lcoil3/Extras$Key;
	public static final fun getHttpHeaders (Lcoil3/request/ImageRequest;)Lcoil3/network/NetworkHeaders;
	public static final fun getHttpHeaders (Lcoil3/request/Options;)Lcoil3/network/NetworkHeaders;
	public static final fun getHttpMethod (Lcoil3/Extras$Key$Companion;)Lcoil3/Extras$Key;
	public static final fun getHttpMethod (Lcoil3/request/ImageRequest;)Ljava/lang/String;
	public static final fun getHttpMethod (Lcoil3/request/Options;)Ljava/lang/String;
	public static final fun httpBody (Lcoil3/request/ImageRequest$Builder;Lcoil3/network/NetworkRequestBody;)Lcoil3/request/ImageRequest$Builder;
	public static final fun httpHeaders (Lcoil3/request/ImageRequest$Builder;Lcoil3/network/NetworkHeaders;)Lcoil3/request/ImageRequest$Builder;
	public static final fun httpMethod (Lcoil3/request/ImageRequest$Builder;Ljava/lang/String;)Lcoil3/request/ImageRequest$Builder;
}

public abstract interface class coil3/network/NetworkClient {
	public abstract fun executeRequest (Lcoil3/network/NetworkRequest;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class coil3/network/NetworkClientKt {
	public static final fun NetworkRequestBody (Lokio/ByteString;)Lcoil3/network/NetworkRequestBody;
	public static final fun NetworkResponseBody (Lokio/BufferedSource;)Lcoil3/network/NetworkResponseBody;
}

public final class coil3/network/NetworkFetcher : coil3/fetch/Fetcher {
	public fun <init> (Ljava/lang/String;Lcoil3/request/Options;Lkotlin/Lazy;Lkotlin/Lazy;Lkotlin/Lazy;Lcoil3/network/ConnectivityChecker;)V
	public fun fetch (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class coil3/network/NetworkFetcher$Factory : coil3/fetch/Fetcher$Factory {
	public fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)V
	public synthetic fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun create (Lcoil3/Uri;Lcoil3/request/Options;Lcoil3/ImageLoader;)Lcoil3/fetch/Fetcher;
	public synthetic fun create (Ljava/lang/Object;Lcoil3/request/Options;Lcoil3/ImageLoader;)Lcoil3/fetch/Fetcher;
}

public final class coil3/network/NetworkHeaders {
	public static final field Companion Lcoil3/network/NetworkHeaders$Companion;
	public static final field EMPTY Lcoil3/network/NetworkHeaders;
	public synthetic fun <init> (Ljava/util/Map;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun asMap ()Ljava/util/Map;
	public fun equals (Ljava/lang/Object;)Z
	public final fun get (Ljava/lang/String;)Ljava/lang/String;
	public final fun getAll (Ljava/lang/String;)Ljava/util/List;
	public fun hashCode ()I
	public final fun newBuilder ()Lcoil3/network/NetworkHeaders$Builder;
	public fun toString ()Ljava/lang/String;
}

public final class coil3/network/NetworkHeaders$Builder {
	public fun <init> ()V
	public fun <init> (Lcoil3/network/NetworkHeaders;)V
	public final fun add (Ljava/lang/String;Ljava/lang/String;)Lcoil3/network/NetworkHeaders$Builder;
	public final fun build ()Lcoil3/network/NetworkHeaders;
	public final fun set (Ljava/lang/String;Ljava/lang/String;)Lcoil3/network/NetworkHeaders$Builder;
	public final fun set (Ljava/lang/String;Ljava/util/List;)Lcoil3/network/NetworkHeaders$Builder;
}

public final class coil3/network/NetworkHeaders$Companion {
}

public final class coil3/network/NetworkRequest {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Lcoil3/network/NetworkHeaders;Lcoil3/network/NetworkRequestBody;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Lcoil3/network/NetworkHeaders;Lcoil3/network/NetworkRequestBody;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Lcoil3/network/NetworkHeaders;Lcoil3/network/NetworkRequestBody;)Lcoil3/network/NetworkRequest;
	public static synthetic fun copy$default (Lcoil3/network/NetworkRequest;Ljava/lang/String;Ljava/lang/String;Lcoil3/network/NetworkHeaders;Lcoil3/network/NetworkRequestBody;ILjava/lang/Object;)Lcoil3/network/NetworkRequest;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBody ()Lcoil3/network/NetworkRequestBody;
	public final fun getHeaders ()Lcoil3/network/NetworkHeaders;
	public final fun getMethod ()Ljava/lang/String;
	public final fun getUrl ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class coil3/network/NetworkRequestBody {
	public abstract fun writeTo (Lokio/BufferedSink;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class coil3/network/NetworkResponse {
	public fun <init> ()V
	public fun <init> (IJJLcoil3/network/NetworkHeaders;Lcoil3/network/NetworkResponseBody;Ljava/lang/Object;)V
	public synthetic fun <init> (IJJLcoil3/network/NetworkHeaders;Lcoil3/network/NetworkResponseBody;Ljava/lang/Object;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun copy (IJJLcoil3/network/NetworkHeaders;Lcoil3/network/NetworkResponseBody;Ljava/lang/Object;)Lcoil3/network/NetworkResponse;
	public static synthetic fun copy$default (Lcoil3/network/NetworkResponse;IJJLcoil3/network/NetworkHeaders;Lcoil3/network/NetworkResponseBody;Ljava/lang/Object;ILjava/lang/Object;)Lcoil3/network/NetworkResponse;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBody ()Lcoil3/network/NetworkResponseBody;
	public final fun getCode ()I
	public final fun getDelegate ()Ljava/lang/Object;
	public final fun getHeaders ()Lcoil3/network/NetworkHeaders;
	public final fun getRequestMillis ()J
	public final fun getResponseMillis ()J
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class coil3/network/NetworkResponseBody : java/lang/AutoCloseable {
	public abstract fun writeTo (Lokio/BufferedSink;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun writeTo (Lokio/FileSystem;Lokio/Path;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

