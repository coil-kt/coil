public final class coil/ComponentRegistry {
	public fun <init> ()V
	public synthetic fun <init> (Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun newBuilder ()Lcoil/ComponentRegistry$Builder;
}

public final class coil/ComponentRegistry$Builder {
	public fun <init> ()V
	public fun <init> (Lcoil/ComponentRegistry;)V
	public final fun add (Lcoil/decode/Decoder;)Lcoil/ComponentRegistry$Builder;
	public final fun add (Lcoil/fetch/Fetcher;Ljava/lang/Class;)Lcoil/ComponentRegistry$Builder;
	public final fun add (Lcoil/intercept/Interceptor;)Lcoil/ComponentRegistry$Builder;
	public final fun add (Lcoil/map/Mapper;Ljava/lang/Class;)Lcoil/ComponentRegistry$Builder;
	public final fun add (Lcoil/map/MeasuredMapper;Ljava/lang/Class;)Lcoil/ComponentRegistry$Builder;
	public final fun add (Ljava/lang/Class;Lcoil/fetch/Fetcher;)Lcoil/ComponentRegistry$Builder;
	public final fun add (Ljava/lang/Class;Lcoil/map/Mapper;)Lcoil/ComponentRegistry$Builder;
	public final fun add (Ljava/lang/Class;Lcoil/map/MeasuredMapper;)Lcoil/ComponentRegistry$Builder;
	public final fun build ()Lcoil/ComponentRegistry;
}

public abstract interface class coil/EventListener : coil/request/ImageRequest$Listener {
	public static final field Companion Lcoil/EventListener$Companion;
	public static final field NONE Lcoil/EventListener;
	public abstract fun decodeEnd (Lcoil/request/ImageRequest;Lcoil/decode/Decoder;Lcoil/decode/Options;Lcoil/decode/DecodeResult;)V
	public abstract fun decodeStart (Lcoil/request/ImageRequest;Lcoil/decode/Decoder;Lcoil/decode/Options;)V
	public abstract fun fetchEnd (Lcoil/request/ImageRequest;Lcoil/fetch/Fetcher;Lcoil/decode/Options;Lcoil/fetch/FetchResult;)V
	public abstract fun fetchStart (Lcoil/request/ImageRequest;Lcoil/fetch/Fetcher;Lcoil/decode/Options;)V
	public abstract fun mapEnd (Lcoil/request/ImageRequest;Ljava/lang/Object;)V
	public abstract fun mapStart (Lcoil/request/ImageRequest;Ljava/lang/Object;)V
	public abstract fun onCancel (Lcoil/request/ImageRequest;)V
	public abstract fun onError (Lcoil/request/ImageRequest;Ljava/lang/Throwable;)V
	public abstract fun onStart (Lcoil/request/ImageRequest;)V
	public abstract fun onSuccess (Lcoil/request/ImageRequest;Lcoil/request/ImageResult$Metadata;)V
	public abstract fun resolveSizeEnd (Lcoil/request/ImageRequest;Lcoil/size/Size;)V
	public abstract fun resolveSizeStart (Lcoil/request/ImageRequest;)V
	public abstract fun transformEnd (Lcoil/request/ImageRequest;Landroid/graphics/Bitmap;)V
	public abstract fun transformStart (Lcoil/request/ImageRequest;Landroid/graphics/Bitmap;)V
	public abstract fun transitionEnd (Lcoil/request/ImageRequest;)V
	public abstract fun transitionStart (Lcoil/request/ImageRequest;)V
}

public final class coil/EventListener$Companion {
}

public final class coil/EventListener$DefaultImpls {
	public static fun decodeEnd (Lcoil/EventListener;Lcoil/request/ImageRequest;Lcoil/decode/Decoder;Lcoil/decode/Options;Lcoil/decode/DecodeResult;)V
	public static fun decodeStart (Lcoil/EventListener;Lcoil/request/ImageRequest;Lcoil/decode/Decoder;Lcoil/decode/Options;)V
	public static fun fetchEnd (Lcoil/EventListener;Lcoil/request/ImageRequest;Lcoil/fetch/Fetcher;Lcoil/decode/Options;Lcoil/fetch/FetchResult;)V
	public static fun fetchStart (Lcoil/EventListener;Lcoil/request/ImageRequest;Lcoil/fetch/Fetcher;Lcoil/decode/Options;)V
	public static fun mapEnd (Lcoil/EventListener;Lcoil/request/ImageRequest;Ljava/lang/Object;)V
	public static fun mapStart (Lcoil/EventListener;Lcoil/request/ImageRequest;Ljava/lang/Object;)V
	public static fun onCancel (Lcoil/EventListener;Lcoil/request/ImageRequest;)V
	public static fun onError (Lcoil/EventListener;Lcoil/request/ImageRequest;Ljava/lang/Throwable;)V
	public static fun onStart (Lcoil/EventListener;Lcoil/request/ImageRequest;)V
	public static fun onSuccess (Lcoil/EventListener;Lcoil/request/ImageRequest;Lcoil/request/ImageResult$Metadata;)V
	public static fun resolveSizeEnd (Lcoil/EventListener;Lcoil/request/ImageRequest;Lcoil/size/Size;)V
	public static fun resolveSizeStart (Lcoil/EventListener;Lcoil/request/ImageRequest;)V
	public static fun transformEnd (Lcoil/EventListener;Lcoil/request/ImageRequest;Landroid/graphics/Bitmap;)V
	public static fun transformStart (Lcoil/EventListener;Lcoil/request/ImageRequest;Landroid/graphics/Bitmap;)V
	public static fun transitionEnd (Lcoil/EventListener;Lcoil/request/ImageRequest;)V
	public static fun transitionStart (Lcoil/EventListener;Lcoil/request/ImageRequest;)V
}

public abstract interface class coil/EventListener$Factory {
	public static final field Companion Lcoil/EventListener$Factory$Companion;
	public static final field NONE Lcoil/EventListener$Factory;
	public static fun create (Lcoil/EventListener;)Lcoil/EventListener$Factory;
	public abstract fun create (Lcoil/request/ImageRequest;)Lcoil/EventListener;
}

public final class coil/EventListener$Factory$Companion {
	public final fun create (Lcoil/EventListener;)Lcoil/EventListener$Factory;
}

public abstract interface class coil/ImageLoader {
	public static final field Companion Lcoil/ImageLoader$Companion;
	public abstract fun clearMemory ()V
	public static fun create (Landroid/content/Context;)Lcoil/ImageLoader;
	public abstract fun enqueue (Lcoil/request/ImageRequest;)Lcoil/request/Disposable;
	public abstract fun execute (Lcoil/request/ImageRequest;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getBitmapPool ()Lcoil/bitmap/BitmapPool;
	public abstract fun getDefaults ()Lcoil/request/DefaultRequestOptions;
	public abstract fun getMemoryCache ()Lcoil/memory/MemoryCache;
	public abstract fun invalidate (Ljava/lang/String;)V
	public abstract fun shutdown ()V
}

public final class coil/ImageLoader$Builder {
	public fun <init> (Landroid/content/Context;)V
	public final fun addLastModifiedToFileCacheKey (Z)Lcoil/ImageLoader$Builder;
	public final fun allowHardware (Z)Lcoil/ImageLoader$Builder;
	public final fun allowRgb565 (Z)Lcoil/ImageLoader$Builder;
	public final fun availableMemoryPercentage (D)Lcoil/ImageLoader$Builder;
	public final fun bitmapConfig (Landroid/graphics/Bitmap$Config;)Lcoil/ImageLoader$Builder;
	public final fun bitmapPoolPercentage (D)Lcoil/ImageLoader$Builder;
	public final fun bitmapPoolingEnabled (Z)Lcoil/ImageLoader$Builder;
	public final fun build ()Lcoil/ImageLoader;
	public final fun callFactory (Lkotlin/jvm/functions/Function0;)Lcoil/ImageLoader$Builder;
	public final fun callFactory (Lokhttp3/Call$Factory;)Lcoil/ImageLoader$Builder;
	public final fun componentRegistry (Lcoil/ComponentRegistry;)Lcoil/ImageLoader$Builder;
	public final synthetic fun componentRegistry (Lkotlin/jvm/functions/Function1;)Lcoil/ImageLoader$Builder;
	public final fun crossfade (I)Lcoil/ImageLoader$Builder;
	public final fun crossfade (Z)Lcoil/ImageLoader$Builder;
	public final fun diskCachePolicy (Lcoil/request/CachePolicy;)Lcoil/ImageLoader$Builder;
	public final fun dispatcher (Lkotlinx/coroutines/CoroutineDispatcher;)Lcoil/ImageLoader$Builder;
	public final fun error (I)Lcoil/ImageLoader$Builder;
	public final fun error (Landroid/graphics/drawable/Drawable;)Lcoil/ImageLoader$Builder;
	public final fun eventListener (Lcoil/EventListener$Factory;)Lcoil/ImageLoader$Builder;
	public final fun eventListener (Lcoil/EventListener;)Lcoil/ImageLoader$Builder;
	public final fun fallback (I)Lcoil/ImageLoader$Builder;
	public final fun fallback (Landroid/graphics/drawable/Drawable;)Lcoil/ImageLoader$Builder;
	public final fun launchInterceptorChainOnMainThread (Z)Lcoil/ImageLoader$Builder;
	public final fun logger (Lcoil/util/Logger;)Lcoil/ImageLoader$Builder;
	public final fun memoryCachePolicy (Lcoil/request/CachePolicy;)Lcoil/ImageLoader$Builder;
	public final fun networkCachePolicy (Lcoil/request/CachePolicy;)Lcoil/ImageLoader$Builder;
	public final fun okHttpClient (Lkotlin/jvm/functions/Function0;)Lcoil/ImageLoader$Builder;
	public final fun okHttpClient (Lokhttp3/OkHttpClient;)Lcoil/ImageLoader$Builder;
	public final fun placeholder (I)Lcoil/ImageLoader$Builder;
	public final fun placeholder (Landroid/graphics/drawable/Drawable;)Lcoil/ImageLoader$Builder;
	public final fun precision (Lcoil/size/Precision;)Lcoil/ImageLoader$Builder;
	public final fun trackWeakReferences (Z)Lcoil/ImageLoader$Builder;
	public final fun transition (Lcoil/transition/Transition;)Lcoil/ImageLoader$Builder;
}

public final class coil/ImageLoader$Companion {
	public final fun create (Landroid/content/Context;)Lcoil/ImageLoader;
}

public final class coil/ImageLoader$DefaultImpls {
	public static fun clearMemory (Lcoil/ImageLoader;)V
	public static fun invalidate (Lcoil/ImageLoader;Ljava/lang/String;)V
}

public abstract interface annotation class coil/annotation/ExperimentalCoilApi : java/lang/annotation/Annotation {
}

public abstract interface annotation class coil/annotation/InternalCoilApi : java/lang/annotation/Annotation {
}

public abstract interface class coil/bitmap/BitmapPool {
	public static final field Companion Lcoil/bitmap/BitmapPool$Companion;
	public abstract fun clear ()V
	public static fun create (I)Lcoil/bitmap/BitmapPool;
	public abstract fun get (IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;
	public abstract fun getDirty (IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;
	public abstract fun getDirtyOrNull (IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;
	public abstract fun getOrNull (IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;
	public abstract fun put (Landroid/graphics/Bitmap;)V
	public abstract fun trimMemory (I)V
}

public final class coil/bitmap/BitmapPool$Companion {
	public final fun create (I)Lcoil/bitmap/BitmapPool;
}

public final class coil/decode/DataSource : java/lang/Enum {
	public static final field DISK Lcoil/decode/DataSource;
	public static final field MEMORY Lcoil/decode/DataSource;
	public static final field MEMORY_CACHE Lcoil/decode/DataSource;
	public static final field NETWORK Lcoil/decode/DataSource;
	public static fun valueOf (Ljava/lang/String;)Lcoil/decode/DataSource;
	public static fun values ()[Lcoil/decode/DataSource;
}

public final class coil/decode/DecodeResult {
	public fun <init> (Landroid/graphics/drawable/Drawable;Z)V
	public final fun component1 ()Landroid/graphics/drawable/Drawable;
	public final fun component2 ()Z
	public final fun copy (Landroid/graphics/drawable/Drawable;Z)Lcoil/decode/DecodeResult;
	public static synthetic fun copy$default (Lcoil/decode/DecodeResult;Landroid/graphics/drawable/Drawable;ZILjava/lang/Object;)Lcoil/decode/DecodeResult;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDrawable ()Landroid/graphics/drawable/Drawable;
	public fun hashCode ()I
	public final fun isSampled ()Z
	public fun toString ()Ljava/lang/String;
}

public final class coil/decode/DecodeUtils {
	public static final field INSTANCE Lcoil/decode/DecodeUtils;
	public static final fun calculateInSampleSize (IIIILcoil/size/Scale;)I
	public static final fun computePixelSize (IILcoil/size/Size;Lcoil/size/Scale;)Lcoil/size/PixelSize;
	public static final fun computeSizeMultiplier (DDDDLcoil/size/Scale;)D
	public static final fun computeSizeMultiplier (FFFFLcoil/size/Scale;)F
	public static final fun computeSizeMultiplier (IIIILcoil/size/Scale;)D
	public static final fun isAnimatedHeif (Lokio/BufferedSource;)Z
	public static final fun isAnimatedWebP (Lokio/BufferedSource;)Z
	public static final fun isGif (Lokio/BufferedSource;)Z
	public static final fun isHeif (Lokio/BufferedSource;)Z
	public static final fun isWebP (Lokio/BufferedSource;)Z
}

public abstract interface class coil/decode/Decoder {
	public abstract fun decode (Lcoil/bitmap/BitmapPool;Lokio/BufferedSource;Lcoil/size/Size;Lcoil/decode/Options;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun handles (Lokio/BufferedSource;Ljava/lang/String;)Z
}

public final class coil/decode/InterruptibleSource : okio/ForwardingSource, kotlin/jvm/functions/Function1 {
	public fun <init> (Lkotlinx/coroutines/CancellableContinuation;Lokio/Source;)V
	public final fun clearInterrupt ()V
	public synthetic fun invoke (Ljava/lang/Object;)Ljava/lang/Object;
	public fun invoke (Ljava/lang/Throwable;)V
	public fun read (Lokio/Buffer;J)J
}

public final class coil/decode/InterruptibleSourceKt {
	public static final fun withInterruptibleSource (Lokio/Source;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class coil/decode/Options {
	public fun <init> (Landroid/content/Context;Landroid/graphics/Bitmap$Config;Landroid/graphics/ColorSpace;Lcoil/size/Scale;ZZLokhttp3/Headers;Lcoil/request/Parameters;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;)V
	public final fun copy (Landroid/content/Context;Landroid/graphics/Bitmap$Config;Landroid/graphics/ColorSpace;Lcoil/size/Scale;ZZLokhttp3/Headers;Lcoil/request/Parameters;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;)Lcoil/decode/Options;
	public static synthetic fun copy$default (Lcoil/decode/Options;Landroid/content/Context;Landroid/graphics/Bitmap$Config;Landroid/graphics/ColorSpace;Lcoil/size/Scale;ZZLokhttp3/Headers;Lcoil/request/Parameters;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;ILjava/lang/Object;)Lcoil/decode/Options;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAllowInexactSize ()Z
	public final fun getAllowRgb565 ()Z
	public final fun getColorSpace ()Landroid/graphics/ColorSpace;
	public final fun getConfig ()Landroid/graphics/Bitmap$Config;
	public final fun getContext ()Landroid/content/Context;
	public final fun getDiskCachePolicy ()Lcoil/request/CachePolicy;
	public final fun getHeaders ()Lokhttp3/Headers;
	public final fun getMemoryCachePolicy ()Lcoil/request/CachePolicy;
	public final fun getNetworkCachePolicy ()Lcoil/request/CachePolicy;
	public final fun getParameters ()Lcoil/request/Parameters;
	public final fun getScale ()Lcoil/size/Scale;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class coil/drawable/CrossfadeDrawable : android/graphics/drawable/Drawable, android/graphics/drawable/Drawable$Callback, androidx/vectordrawable/graphics/drawable/Animatable2Compat {
	public static final field Companion Lcoil/drawable/CrossfadeDrawable$Companion;
	public static final field DEFAULT_DURATION I
	public fun <init> (Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V
	public fun <init> (Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Lcoil/size/Scale;)V
	public fun <init> (Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Lcoil/size/Scale;I)V
	public fun <init> (Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Lcoil/size/Scale;IZ)V
	public synthetic fun <init> (Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Lcoil/size/Scale;IZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun clearAnimationCallbacks ()V
	public fun draw (Landroid/graphics/Canvas;)V
	public fun getAlpha ()I
	public fun getColorFilter ()Landroid/graphics/ColorFilter;
	public final fun getDurationMillis ()I
	public final fun getFadeStart ()Z
	public fun getIntrinsicHeight ()I
	public fun getIntrinsicWidth ()I
	public fun getOpacity ()I
	public final fun getScale ()Lcoil/size/Scale;
	public fun invalidateDrawable (Landroid/graphics/drawable/Drawable;)V
	public fun isRunning ()Z
	public fun registerAnimationCallback (Landroidx/vectordrawable/graphics/drawable/Animatable2Compat$AnimationCallback;)V
	public fun scheduleDrawable (Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;J)V
	public fun setAlpha (I)V
	public fun setColorFilter (Landroid/graphics/ColorFilter;)V
	public fun setTint (I)V
	public fun setTintBlendMode (Landroid/graphics/BlendMode;)V
	public fun setTintList (Landroid/content/res/ColorStateList;)V
	public fun setTintMode (Landroid/graphics/PorterDuff$Mode;)V
	public fun start ()V
	public fun stop ()V
	public fun unregisterAnimationCallback (Landroidx/vectordrawable/graphics/drawable/Animatable2Compat$AnimationCallback;)Z
	public fun unscheduleDrawable (Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;)V
}

public final class coil/drawable/CrossfadeDrawable$Companion {
}

public final class coil/extension/Parameters {
	public static final fun count (Lcoil/request/Parameters;)I
	public static final fun get (Lcoil/request/Parameters;Ljava/lang/String;)Ljava/lang/Object;
	public static final fun isNotEmpty (Lcoil/request/Parameters;)Z
}

public final class coil/fetch/DrawableResult : coil/fetch/FetchResult {
	public fun <init> (Landroid/graphics/drawable/Drawable;ZLcoil/decode/DataSource;)V
	public final fun component1 ()Landroid/graphics/drawable/Drawable;
	public final fun component2 ()Z
	public final fun component3 ()Lcoil/decode/DataSource;
	public final fun copy (Landroid/graphics/drawable/Drawable;ZLcoil/decode/DataSource;)Lcoil/fetch/DrawableResult;
	public static synthetic fun copy$default (Lcoil/fetch/DrawableResult;Landroid/graphics/drawable/Drawable;ZLcoil/decode/DataSource;ILjava/lang/Object;)Lcoil/fetch/DrawableResult;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDataSource ()Lcoil/decode/DataSource;
	public final fun getDrawable ()Landroid/graphics/drawable/Drawable;
	public fun hashCode ()I
	public final fun isSampled ()Z
	public fun toString ()Ljava/lang/String;
}

public abstract class coil/fetch/FetchResult {
}

public abstract interface class coil/fetch/Fetcher {
	public abstract fun fetch (Lcoil/bitmap/BitmapPool;Ljava/lang/Object;Lcoil/size/Size;Lcoil/decode/Options;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun handles (Ljava/lang/Object;)Z
	public abstract fun key (Ljava/lang/Object;)Ljava/lang/String;
}

public final class coil/fetch/Fetcher$DefaultImpls {
	public static fun handles (Lcoil/fetch/Fetcher;Ljava/lang/Object;)Z
}

public final class coil/fetch/SourceResult : coil/fetch/FetchResult {
	public fun <init> (Lokio/BufferedSource;Ljava/lang/String;Lcoil/decode/DataSource;)V
	public final fun component1 ()Lokio/BufferedSource;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Lcoil/decode/DataSource;
	public final fun copy (Lokio/BufferedSource;Ljava/lang/String;Lcoil/decode/DataSource;)Lcoil/fetch/SourceResult;
	public static synthetic fun copy$default (Lcoil/fetch/SourceResult;Lokio/BufferedSource;Ljava/lang/String;Lcoil/decode/DataSource;ILjava/lang/Object;)Lcoil/fetch/SourceResult;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDataSource ()Lcoil/decode/DataSource;
	public final fun getMimeType ()Ljava/lang/String;
	public final fun getSource ()Lokio/BufferedSource;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class coil/intercept/Interceptor {
	public abstract fun intercept (Lcoil/intercept/Interceptor$Chain;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class coil/intercept/Interceptor$Chain {
	public abstract fun getRequest ()Lcoil/request/ImageRequest;
	public abstract fun getSize ()Lcoil/size/Size;
	public abstract fun proceed (Lcoil/request/ImageRequest;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withSize (Lcoil/size/Size;)Lcoil/intercept/Interceptor$Chain;
}

public abstract interface class coil/map/Mapper {
	public abstract fun handles (Ljava/lang/Object;)Z
	public abstract fun map (Ljava/lang/Object;)Ljava/lang/Object;
}

public final class coil/map/Mapper$DefaultImpls {
	public static fun handles (Lcoil/map/Mapper;Ljava/lang/Object;)Z
}

public abstract interface class coil/map/MeasuredMapper {
	public abstract fun handles (Ljava/lang/Object;)Z
	public abstract fun map (Ljava/lang/Object;Lcoil/size/Size;)Ljava/lang/Object;
}

public final class coil/map/MeasuredMapper$DefaultImpls {
	public static fun handles (Lcoil/map/MeasuredMapper;Ljava/lang/Object;)Z
}

public abstract interface class coil/memory/MemoryCache {
	public abstract fun clear ()V
	public abstract fun get (Lcoil/memory/MemoryCache$Key;)Landroid/graphics/Bitmap;
	public abstract fun getMaxSize ()I
	public abstract fun getSize ()I
	public abstract fun remove (Lcoil/memory/MemoryCache$Key;)Z
	public abstract fun set (Lcoil/memory/MemoryCache$Key;Landroid/graphics/Bitmap;)V
}

public abstract class coil/memory/MemoryCache$Key : android/os/Parcelable {
	public static final field Companion Lcoil/memory/MemoryCache$Key$Companion;
	public static final fun create (Ljava/lang/String;)Lcoil/memory/MemoryCache$Key;
}

public final class coil/memory/MemoryCache$Key$Companion {
	public final fun create (Ljava/lang/String;)Lcoil/memory/MemoryCache$Key;
}

public final class coil/network/HttpException : java/lang/RuntimeException {
	public fun <init> (Lokhttp3/Response;)V
	public final fun getResponse ()Lokhttp3/Response;
}

public final class coil/request/CachePolicy : java/lang/Enum {
	public static final field DISABLED Lcoil/request/CachePolicy;
	public static final field ENABLED Lcoil/request/CachePolicy;
	public static final field READ_ONLY Lcoil/request/CachePolicy;
	public static final field WRITE_ONLY Lcoil/request/CachePolicy;
	public final fun getReadEnabled ()Z
	public final fun getWriteEnabled ()Z
	public static fun valueOf (Ljava/lang/String;)Lcoil/request/CachePolicy;
	public static fun values ()[Lcoil/request/CachePolicy;
}

public final class coil/request/DefaultRequestOptions {
	public static final field Companion Lcoil/request/DefaultRequestOptions$Companion;
	public static final field INSTANCE Lcoil/request/DefaultRequestOptions;
	public fun <init> ()V
	public fun <init> (Lkotlinx/coroutines/CoroutineDispatcher;Lcoil/transition/Transition;Lcoil/size/Precision;Landroid/graphics/Bitmap$Config;ZZLandroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;)V
	public synthetic fun <init> (Lkotlinx/coroutines/CoroutineDispatcher;Lcoil/transition/Transition;Lcoil/size/Precision;Landroid/graphics/Bitmap$Config;ZZLandroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun copy (Lkotlinx/coroutines/CoroutineDispatcher;Lcoil/transition/Transition;Lcoil/size/Precision;Landroid/graphics/Bitmap$Config;ZZLandroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;)Lcoil/request/DefaultRequestOptions;
	public static synthetic fun copy$default (Lcoil/request/DefaultRequestOptions;Lkotlinx/coroutines/CoroutineDispatcher;Lcoil/transition/Transition;Lcoil/size/Precision;Landroid/graphics/Bitmap$Config;ZZLandroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;ILjava/lang/Object;)Lcoil/request/DefaultRequestOptions;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAllowHardware ()Z
	public final fun getAllowRgb565 ()Z
	public final fun getBitmapConfig ()Landroid/graphics/Bitmap$Config;
	public final fun getDiskCachePolicy ()Lcoil/request/CachePolicy;
	public final fun getDispatcher ()Lkotlinx/coroutines/CoroutineDispatcher;
	public final fun getError ()Landroid/graphics/drawable/Drawable;
	public final fun getFallback ()Landroid/graphics/drawable/Drawable;
	public final fun getMemoryCachePolicy ()Lcoil/request/CachePolicy;
	public final fun getNetworkCachePolicy ()Lcoil/request/CachePolicy;
	public final fun getPlaceholder ()Landroid/graphics/drawable/Drawable;
	public final fun getPrecision ()Lcoil/size/Precision;
	public final fun getTransition ()Lcoil/transition/Transition;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class coil/request/DefaultRequestOptions$Companion {
}

public final class coil/request/DefinedRequestOptions {
	public fun <init> (Landroidx/lifecycle/Lifecycle;Lcoil/size/SizeResolver;Lcoil/size/Scale;Lkotlinx/coroutines/CoroutineDispatcher;Lcoil/transition/Transition;Lcoil/size/Precision;Landroid/graphics/Bitmap$Config;Ljava/lang/Boolean;Ljava/lang/Boolean;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;)V
	public final fun copy (Landroidx/lifecycle/Lifecycle;Lcoil/size/SizeResolver;Lcoil/size/Scale;Lkotlinx/coroutines/CoroutineDispatcher;Lcoil/transition/Transition;Lcoil/size/Precision;Landroid/graphics/Bitmap$Config;Ljava/lang/Boolean;Ljava/lang/Boolean;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;)Lcoil/request/DefinedRequestOptions;
	public static synthetic fun copy$default (Lcoil/request/DefinedRequestOptions;Landroidx/lifecycle/Lifecycle;Lcoil/size/SizeResolver;Lcoil/size/Scale;Lkotlinx/coroutines/CoroutineDispatcher;Lcoil/transition/Transition;Lcoil/size/Precision;Landroid/graphics/Bitmap$Config;Ljava/lang/Boolean;Ljava/lang/Boolean;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;ILjava/lang/Object;)Lcoil/request/DefinedRequestOptions;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAllowHardware ()Ljava/lang/Boolean;
	public final fun getAllowRgb565 ()Ljava/lang/Boolean;
	public final fun getBitmapConfig ()Landroid/graphics/Bitmap$Config;
	public final fun getDiskCachePolicy ()Lcoil/request/CachePolicy;
	public final fun getDispatcher ()Lkotlinx/coroutines/CoroutineDispatcher;
	public final fun getLifecycle ()Landroidx/lifecycle/Lifecycle;
	public final fun getMemoryCachePolicy ()Lcoil/request/CachePolicy;
	public final fun getNetworkCachePolicy ()Lcoil/request/CachePolicy;
	public final fun getPrecision ()Lcoil/size/Precision;
	public final fun getScale ()Lcoil/size/Scale;
	public final fun getSizeResolver ()Lcoil/size/SizeResolver;
	public final fun getTransition ()Lcoil/transition/Transition;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class coil/request/Disposable {
	public abstract fun await (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun dispose ()V
	public abstract fun isDisposed ()Z
}

public final class coil/request/ErrorResult : coil/request/ImageResult {
	public fun <init> (Landroid/graphics/drawable/Drawable;Lcoil/request/ImageRequest;Ljava/lang/Throwable;)V
	public final fun component1 ()Landroid/graphics/drawable/Drawable;
	public final fun component2 ()Lcoil/request/ImageRequest;
	public final fun component3 ()Ljava/lang/Throwable;
	public final fun copy (Landroid/graphics/drawable/Drawable;Lcoil/request/ImageRequest;Ljava/lang/Throwable;)Lcoil/request/ErrorResult;
	public static synthetic fun copy$default (Lcoil/request/ErrorResult;Landroid/graphics/drawable/Drawable;Lcoil/request/ImageRequest;Ljava/lang/Throwable;ILjava/lang/Object;)Lcoil/request/ErrorResult;
	public fun equals (Ljava/lang/Object;)Z
	public fun getDrawable ()Landroid/graphics/drawable/Drawable;
	public fun getRequest ()Lcoil/request/ImageRequest;
	public final fun getThrowable ()Ljava/lang/Throwable;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class coil/request/ImageRequest {
	public synthetic fun <init> (Landroid/content/Context;Ljava/lang/Object;Lcoil/target/Target;Lcoil/request/ImageRequest$Listener;Lcoil/memory/MemoryCache$Key;Lcoil/memory/MemoryCache$Key;Landroid/graphics/ColorSpace;Lkotlin/Pair;Lcoil/decode/Decoder;Ljava/util/List;Lokhttp3/Headers;Lcoil/request/Parameters;Landroidx/lifecycle/Lifecycle;Lcoil/size/SizeResolver;Lcoil/size/Scale;Lkotlinx/coroutines/CoroutineDispatcher;Lcoil/transition/Transition;Lcoil/size/Precision;Landroid/graphics/Bitmap$Config;ZZLcoil/request/CachePolicy;Lcoil/request/CachePolicy;Lcoil/request/CachePolicy;Ljava/lang/Integer;Landroid/graphics/drawable/Drawable;Ljava/lang/Integer;Landroid/graphics/drawable/Drawable;Ljava/lang/Integer;Landroid/graphics/drawable/Drawable;Lcoil/request/DefinedRequestOptions;Lcoil/request/DefaultRequestOptions;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAllowHardware ()Z
	public final fun getAllowRgb565 ()Z
	public final fun getBitmapConfig ()Landroid/graphics/Bitmap$Config;
	public final fun getColorSpace ()Landroid/graphics/ColorSpace;
	public final fun getContext ()Landroid/content/Context;
	public final fun getData ()Ljava/lang/Object;
	public final fun getDecoder ()Lcoil/decode/Decoder;
	public final fun getDefaults ()Lcoil/request/DefaultRequestOptions;
	public final fun getDefined ()Lcoil/request/DefinedRequestOptions;
	public final fun getDiskCachePolicy ()Lcoil/request/CachePolicy;
	public final fun getDispatcher ()Lkotlinx/coroutines/CoroutineDispatcher;
	public final fun getError ()Landroid/graphics/drawable/Drawable;
	public final fun getFallback ()Landroid/graphics/drawable/Drawable;
	public final fun getFetcher ()Lkotlin/Pair;
	public final fun getHeaders ()Lokhttp3/Headers;
	public final fun getLifecycle ()Landroidx/lifecycle/Lifecycle;
	public final fun getListener ()Lcoil/request/ImageRequest$Listener;
	public final fun getMemoryCacheKey ()Lcoil/memory/MemoryCache$Key;
	public final fun getMemoryCachePolicy ()Lcoil/request/CachePolicy;
	public final fun getNetworkCachePolicy ()Lcoil/request/CachePolicy;
	public final fun getParameters ()Lcoil/request/Parameters;
	public final fun getPlaceholder ()Landroid/graphics/drawable/Drawable;
	public final fun getPlaceholderMemoryCacheKey ()Lcoil/memory/MemoryCache$Key;
	public final fun getPrecision ()Lcoil/size/Precision;
	public final fun getScale ()Lcoil/size/Scale;
	public final fun getSizeResolver ()Lcoil/size/SizeResolver;
	public final fun getTarget ()Lcoil/target/Target;
	public final fun getTransformations ()Ljava/util/List;
	public final fun getTransition ()Lcoil/transition/Transition;
	public fun hashCode ()I
	public final fun newBuilder ()Lcoil/request/ImageRequest$Builder;
	public final fun newBuilder (Landroid/content/Context;)Lcoil/request/ImageRequest$Builder;
	public static synthetic fun newBuilder$default (Lcoil/request/ImageRequest;Landroid/content/Context;ILjava/lang/Object;)Lcoil/request/ImageRequest$Builder;
	public fun toString ()Ljava/lang/String;
}

public final class coil/request/ImageRequest$Builder {
	public fun <init> (Landroid/content/Context;)V
	public fun <init> (Lcoil/request/ImageRequest;)V
	public fun <init> (Lcoil/request/ImageRequest;Landroid/content/Context;)V
	public synthetic fun <init> (Lcoil/request/ImageRequest;Landroid/content/Context;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun addHeader (Ljava/lang/String;Ljava/lang/String;)Lcoil/request/ImageRequest$Builder;
	public final fun allowHardware (Z)Lcoil/request/ImageRequest$Builder;
	public final fun allowRgb565 (Z)Lcoil/request/ImageRequest$Builder;
	public final fun bitmapConfig (Landroid/graphics/Bitmap$Config;)Lcoil/request/ImageRequest$Builder;
	public final fun build ()Lcoil/request/ImageRequest;
	public final fun colorSpace (Landroid/graphics/ColorSpace;)Lcoil/request/ImageRequest$Builder;
	public final fun crossfade (I)Lcoil/request/ImageRequest$Builder;
	public final fun crossfade (Z)Lcoil/request/ImageRequest$Builder;
	public final fun data (Ljava/lang/Object;)Lcoil/request/ImageRequest$Builder;
	public final fun decoder (Lcoil/decode/Decoder;)Lcoil/request/ImageRequest$Builder;
	public final fun defaults (Lcoil/request/DefaultRequestOptions;)Lcoil/request/ImageRequest$Builder;
	public final fun diskCachePolicy (Lcoil/request/CachePolicy;)Lcoil/request/ImageRequest$Builder;
	public final fun dispatcher (Lkotlinx/coroutines/CoroutineDispatcher;)Lcoil/request/ImageRequest$Builder;
	public final fun error (I)Lcoil/request/ImageRequest$Builder;
	public final fun error (Landroid/graphics/drawable/Drawable;)Lcoil/request/ImageRequest$Builder;
	public final fun fallback (I)Lcoil/request/ImageRequest$Builder;
	public final fun fallback (Landroid/graphics/drawable/Drawable;)Lcoil/request/ImageRequest$Builder;
	public final fun fetcher (Lcoil/fetch/Fetcher;Ljava/lang/Class;)Lcoil/request/ImageRequest$Builder;
	public final fun fetcher (Ljava/lang/Class;Lcoil/fetch/Fetcher;)Lcoil/request/ImageRequest$Builder;
	public final fun headers (Lokhttp3/Headers;)Lcoil/request/ImageRequest$Builder;
	public final fun key (Ljava/lang/String;)Lcoil/request/ImageRequest$Builder;
	public final fun lifecycle (Landroidx/lifecycle/Lifecycle;)Lcoil/request/ImageRequest$Builder;
	public final fun lifecycle (Landroidx/lifecycle/LifecycleOwner;)Lcoil/request/ImageRequest$Builder;
	public final fun listener (Lcoil/request/ImageRequest$Listener;)Lcoil/request/ImageRequest$Builder;
	public final fun listener (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;)Lcoil/request/ImageRequest$Builder;
	public static synthetic fun listener$default (Lcoil/request/ImageRequest$Builder;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lcoil/request/ImageRequest$Builder;
	public final fun memoryCacheKey (Lcoil/memory/MemoryCache$Key;)Lcoil/request/ImageRequest$Builder;
	public final fun memoryCacheKey (Ljava/lang/String;)Lcoil/request/ImageRequest$Builder;
	public final fun memoryCachePolicy (Lcoil/request/CachePolicy;)Lcoil/request/ImageRequest$Builder;
	public final fun networkCachePolicy (Lcoil/request/CachePolicy;)Lcoil/request/ImageRequest$Builder;
	public final fun parameters (Lcoil/request/Parameters;)Lcoil/request/ImageRequest$Builder;
	public final fun placeholder (I)Lcoil/request/ImageRequest$Builder;
	public final fun placeholder (Landroid/graphics/drawable/Drawable;)Lcoil/request/ImageRequest$Builder;
	public final fun placeholderMemoryCacheKey (Lcoil/memory/MemoryCache$Key;)Lcoil/request/ImageRequest$Builder;
	public final fun precision (Lcoil/size/Precision;)Lcoil/request/ImageRequest$Builder;
	public final fun removeHeader (Ljava/lang/String;)Lcoil/request/ImageRequest$Builder;
	public final fun removeParameter (Ljava/lang/String;)Lcoil/request/ImageRequest$Builder;
	public final fun scale (Lcoil/size/Scale;)Lcoil/request/ImageRequest$Builder;
	public final fun setHeader (Ljava/lang/String;Ljava/lang/String;)Lcoil/request/ImageRequest$Builder;
	public final fun setParameter (Ljava/lang/String;Ljava/lang/Object;)Lcoil/request/ImageRequest$Builder;
	public final fun setParameter (Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;)Lcoil/request/ImageRequest$Builder;
	public static synthetic fun setParameter$default (Lcoil/request/ImageRequest$Builder;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;ILjava/lang/Object;)Lcoil/request/ImageRequest$Builder;
	public final fun size (I)Lcoil/request/ImageRequest$Builder;
	public final fun size (II)Lcoil/request/ImageRequest$Builder;
	public final fun size (Lcoil/size/Size;)Lcoil/request/ImageRequest$Builder;
	public final fun size (Lcoil/size/SizeResolver;)Lcoil/request/ImageRequest$Builder;
	public final fun target (Landroid/widget/ImageView;)Lcoil/request/ImageRequest$Builder;
	public final fun target (Lcoil/target/Target;)Lcoil/request/ImageRequest$Builder;
	public final fun target (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lcoil/request/ImageRequest$Builder;
	public static synthetic fun target$default (Lcoil/request/ImageRequest$Builder;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lcoil/request/ImageRequest$Builder;
	public final fun transformations (Ljava/util/List;)Lcoil/request/ImageRequest$Builder;
	public final fun transformations ([Lcoil/transform/Transformation;)Lcoil/request/ImageRequest$Builder;
	public final fun transition (Lcoil/transition/Transition;)Lcoil/request/ImageRequest$Builder;
}

public abstract interface class coil/request/ImageRequest$Listener {
	public abstract fun onCancel (Lcoil/request/ImageRequest;)V
	public abstract fun onError (Lcoil/request/ImageRequest;Ljava/lang/Throwable;)V
	public abstract fun onStart (Lcoil/request/ImageRequest;)V
	public abstract fun onSuccess (Lcoil/request/ImageRequest;Lcoil/request/ImageResult$Metadata;)V
}

public final class coil/request/ImageRequest$Listener$DefaultImpls {
	public static fun onCancel (Lcoil/request/ImageRequest$Listener;Lcoil/request/ImageRequest;)V
	public static fun onError (Lcoil/request/ImageRequest$Listener;Lcoil/request/ImageRequest;Ljava/lang/Throwable;)V
	public static fun onStart (Lcoil/request/ImageRequest$Listener;Lcoil/request/ImageRequest;)V
	public static fun onSuccess (Lcoil/request/ImageRequest$Listener;Lcoil/request/ImageRequest;Lcoil/request/ImageResult$Metadata;)V
}

public abstract class coil/request/ImageResult {
	public abstract fun getDrawable ()Landroid/graphics/drawable/Drawable;
	public abstract fun getRequest ()Lcoil/request/ImageRequest;
}

public final class coil/request/ImageResult$Metadata {
	public fun <init> (Lcoil/memory/MemoryCache$Key;ZLcoil/decode/DataSource;Z)V
	public final fun component1 ()Lcoil/memory/MemoryCache$Key;
	public final fun component2 ()Z
	public final fun component3 ()Lcoil/decode/DataSource;
	public final fun component4 ()Z
	public final fun copy (Lcoil/memory/MemoryCache$Key;ZLcoil/decode/DataSource;Z)Lcoil/request/ImageResult$Metadata;
	public static synthetic fun copy$default (Lcoil/request/ImageResult$Metadata;Lcoil/memory/MemoryCache$Key;ZLcoil/decode/DataSource;ZILjava/lang/Object;)Lcoil/request/ImageResult$Metadata;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDataSource ()Lcoil/decode/DataSource;
	public final fun getMemoryCacheKey ()Lcoil/memory/MemoryCache$Key;
	public fun hashCode ()I
	public final fun isPlaceholderMemoryCacheKeyPresent ()Z
	public final fun isSampled ()Z
	public fun toString ()Ljava/lang/String;
}

public final class coil/request/NullRequestData {
	public static final field INSTANCE Lcoil/request/NullRequestData;
	public fun toString ()Ljava/lang/String;
}

public final class coil/request/NullRequestDataException : java/lang/RuntimeException {
	public fun <init> ()V
}

public final class coil/request/Parameters : java/lang/Iterable, kotlin/jvm/internal/markers/KMappedMarker {
	public static final field Companion Lcoil/request/Parameters$Companion;
	public static final field EMPTY Lcoil/request/Parameters;
	public fun <init> ()V
	public synthetic fun <init> (Ljava/util/Map;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun cacheKey (Ljava/lang/String;)Ljava/lang/String;
	public final fun cacheKeys ()Ljava/util/Map;
	public final fun entry (Ljava/lang/String;)Lcoil/request/Parameters$Entry;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public final fun newBuilder ()Lcoil/request/Parameters$Builder;
	public final fun size ()I
	public fun toString ()Ljava/lang/String;
	public final fun value (Ljava/lang/String;)Ljava/lang/Object;
	public final fun values ()Ljava/util/Map;
}

public final class coil/request/Parameters$Builder {
	public fun <init> ()V
	public fun <init> (Lcoil/request/Parameters;)V
	public final fun build ()Lcoil/request/Parameters;
	public final fun remove (Ljava/lang/String;)Lcoil/request/Parameters$Builder;
	public final fun set (Ljava/lang/String;Ljava/lang/Object;)Lcoil/request/Parameters$Builder;
	public final fun set (Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;)Lcoil/request/Parameters$Builder;
	public static synthetic fun set$default (Lcoil/request/Parameters$Builder;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;ILjava/lang/Object;)Lcoil/request/Parameters$Builder;
}

public final class coil/request/Parameters$Companion {
}

public final class coil/request/Parameters$Entry {
	public fun <init> (Ljava/lang/Object;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/Object;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/Object;Ljava/lang/String;)Lcoil/request/Parameters$Entry;
	public static synthetic fun copy$default (Lcoil/request/Parameters$Entry;Ljava/lang/Object;Ljava/lang/String;ILjava/lang/Object;)Lcoil/request/Parameters$Entry;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCacheKey ()Ljava/lang/String;
	public final fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class coil/request/ParametersKt {
	public static final fun count (Lcoil/request/Parameters;)I
	public static final fun get (Lcoil/request/Parameters;Ljava/lang/String;)Ljava/lang/Object;
	public static final fun isNotEmpty (Lcoil/request/Parameters;)Z
}

public final class coil/request/SuccessResult : coil/request/ImageResult {
	public fun <init> (Landroid/graphics/drawable/Drawable;Lcoil/request/ImageRequest;Lcoil/request/ImageResult$Metadata;)V
	public final fun component1 ()Landroid/graphics/drawable/Drawable;
	public final fun component2 ()Lcoil/request/ImageRequest;
	public final fun component3 ()Lcoil/request/ImageResult$Metadata;
	public final fun copy (Landroid/graphics/drawable/Drawable;Lcoil/request/ImageRequest;Lcoil/request/ImageResult$Metadata;)Lcoil/request/SuccessResult;
	public static synthetic fun copy$default (Lcoil/request/SuccessResult;Landroid/graphics/drawable/Drawable;Lcoil/request/ImageRequest;Lcoil/request/ImageResult$Metadata;ILjava/lang/Object;)Lcoil/request/SuccessResult;
	public fun equals (Ljava/lang/Object;)Z
	public fun getDrawable ()Landroid/graphics/drawable/Drawable;
	public final fun getMetadata ()Lcoil/request/ImageResult$Metadata;
	public fun getRequest ()Lcoil/request/ImageRequest;
	public final fun getSource ()Lcoil/decode/DataSource;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class coil/size/DisplaySizeResolver : coil/size/SizeResolver {
	public fun <init> (Landroid/content/Context;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun size (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
}

public final class coil/size/OriginalSize : coil/size/Size {
	public static final field CREATOR Landroid/os/Parcelable$Creator;
	public static final field INSTANCE Lcoil/size/OriginalSize;
	public fun describeContents ()I
	public fun toString ()Ljava/lang/String;
	public fun writeToParcel (Landroid/os/Parcel;I)V
}

public class coil/size/OriginalSize$Creator : android/os/Parcelable$Creator {
	public fun <init> ()V
	public final fun createFromParcel (Landroid/os/Parcel;)Ljava/lang/Object;
	public final fun newArray (I)[Ljava/lang/Object;
}

public final class coil/size/PixelSize : coil/size/Size {
	public static final field CREATOR Landroid/os/Parcelable$Creator;
	public fun <init> (II)V
	public final fun component1 ()I
	public final fun component2 ()I
	public final fun copy (II)Lcoil/size/PixelSize;
	public static synthetic fun copy$default (Lcoil/size/PixelSize;IIILjava/lang/Object;)Lcoil/size/PixelSize;
	public fun describeContents ()I
	public fun equals (Ljava/lang/Object;)Z
	public final fun getHeight ()I
	public final fun getWidth ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public fun writeToParcel (Landroid/os/Parcel;I)V
}

public class coil/size/PixelSize$Creator : android/os/Parcelable$Creator {
	public fun <init> ()V
	public final fun createFromParcel (Landroid/os/Parcel;)Ljava/lang/Object;
	public final fun newArray (I)[Ljava/lang/Object;
}

public final class coil/size/Precision : java/lang/Enum {
	public static final field AUTOMATIC Lcoil/size/Precision;
	public static final field EXACT Lcoil/size/Precision;
	public static final field INEXACT Lcoil/size/Precision;
	public static fun valueOf (Ljava/lang/String;)Lcoil/size/Precision;
	public static fun values ()[Lcoil/size/Precision;
}

public final class coil/size/Scale : java/lang/Enum {
	public static final field FILL Lcoil/size/Scale;
	public static final field FIT Lcoil/size/Scale;
	public static fun valueOf (Ljava/lang/String;)Lcoil/size/Scale;
	public static fun values ()[Lcoil/size/Scale;
}

public abstract class coil/size/Size : android/os/Parcelable {
}

public abstract interface class coil/size/SizeResolver {
	public static final field Companion Lcoil/size/SizeResolver$Companion;
	public static fun create (Lcoil/size/Size;)Lcoil/size/SizeResolver;
	public abstract fun size (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class coil/size/SizeResolver$Companion {
	public final fun create (Lcoil/size/Size;)Lcoil/size/SizeResolver;
}

public abstract interface class coil/size/ViewSizeResolver : coil/size/SizeResolver {
	public static final field Companion Lcoil/size/ViewSizeResolver$Companion;
	public static fun create (Landroid/view/View;Z)Lcoil/size/ViewSizeResolver;
	public abstract fun getSubtractPadding ()Z
	public abstract fun getView ()Landroid/view/View;
	public abstract fun size (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class coil/size/ViewSizeResolver$Companion {
	public final fun create (Landroid/view/View;Z)Lcoil/size/ViewSizeResolver;
	public static synthetic fun create$default (Lcoil/size/ViewSizeResolver$Companion;Landroid/view/View;ZILjava/lang/Object;)Lcoil/size/ViewSizeResolver;
}

public final class coil/size/ViewSizeResolver$DefaultImpls {
	public static fun getSubtractPadding (Lcoil/size/ViewSizeResolver;)Z
	public static fun size (Lcoil/size/ViewSizeResolver;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public class coil/target/ImageViewTarget : androidx/lifecycle/DefaultLifecycleObserver, coil/target/PoolableViewTarget, coil/transition/TransitionTarget {
	public fun <init> (Landroid/widget/ImageView;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getDrawable ()Landroid/graphics/drawable/Drawable;
	public synthetic fun getView ()Landroid/view/View;
	public fun getView ()Landroid/widget/ImageView;
	public fun hashCode ()I
	public fun onClear ()V
	public fun onError (Landroid/graphics/drawable/Drawable;)V
	public fun onStart (Landroid/graphics/drawable/Drawable;)V
	public fun onStart (Landroidx/lifecycle/LifecycleOwner;)V
	public fun onStop (Landroidx/lifecycle/LifecycleOwner;)V
	public fun onSuccess (Landroid/graphics/drawable/Drawable;)V
	protected fun setDrawable (Landroid/graphics/drawable/Drawable;)V
	public fun toString ()Ljava/lang/String;
	protected fun updateAnimation ()V
}

public abstract interface class coil/target/PoolableViewTarget : coil/target/ViewTarget {
	public abstract fun onClear ()V
}

public final class coil/target/PoolableViewTarget$DefaultImpls {
	public static fun onError (Lcoil/target/PoolableViewTarget;Landroid/graphics/drawable/Drawable;)V
	public static fun onStart (Lcoil/target/PoolableViewTarget;Landroid/graphics/drawable/Drawable;)V
	public static fun onSuccess (Lcoil/target/PoolableViewTarget;Landroid/graphics/drawable/Drawable;)V
}

public abstract interface class coil/target/Target {
	public abstract fun onError (Landroid/graphics/drawable/Drawable;)V
	public abstract fun onStart (Landroid/graphics/drawable/Drawable;)V
	public abstract fun onSuccess (Landroid/graphics/drawable/Drawable;)V
}

public final class coil/target/Target$DefaultImpls {
	public static fun onError (Lcoil/target/Target;Landroid/graphics/drawable/Drawable;)V
	public static fun onStart (Lcoil/target/Target;Landroid/graphics/drawable/Drawable;)V
	public static fun onSuccess (Lcoil/target/Target;Landroid/graphics/drawable/Drawable;)V
}

public abstract interface class coil/target/ViewTarget : coil/target/Target {
	public abstract fun getView ()Landroid/view/View;
}

public final class coil/target/ViewTarget$DefaultImpls {
	public static fun onError (Lcoil/target/ViewTarget;Landroid/graphics/drawable/Drawable;)V
	public static fun onStart (Lcoil/target/ViewTarget;Landroid/graphics/drawable/Drawable;)V
	public static fun onSuccess (Lcoil/target/ViewTarget;Landroid/graphics/drawable/Drawable;)V
}

public final class coil/transform/BlurTransformation : coil/transform/Transformation {
	public fun <init> (Landroid/content/Context;)V
	public fun <init> (Landroid/content/Context;F)V
	public fun <init> (Landroid/content/Context;FF)V
	public synthetic fun <init> (Landroid/content/Context;FFILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun key ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public fun transform (Lcoil/bitmap/BitmapPool;Landroid/graphics/Bitmap;Lcoil/size/Size;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class coil/transform/CircleCropTransformation : coil/transform/Transformation {
	public fun <init> ()V
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun key ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public fun transform (Lcoil/bitmap/BitmapPool;Landroid/graphics/Bitmap;Lcoil/size/Size;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class coil/transform/GrayscaleTransformation : coil/transform/Transformation {
	public fun <init> ()V
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun key ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public fun transform (Lcoil/bitmap/BitmapPool;Landroid/graphics/Bitmap;Lcoil/size/Size;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class coil/transform/RoundedCornersTransformation : coil/transform/Transformation {
	public fun <init> ()V
	public fun <init> (F)V
	public fun <init> (FFFF)V
	public synthetic fun <init> (FFFFILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun key ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public fun transform (Lcoil/bitmap/BitmapPool;Landroid/graphics/Bitmap;Lcoil/size/Size;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class coil/transform/Transformation {
	public abstract fun key ()Ljava/lang/String;
	public abstract fun transform (Lcoil/bitmap/BitmapPool;Landroid/graphics/Bitmap;Lcoil/size/Size;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class coil/transition/CrossfadeTransition : coil/transition/Transition {
	public fun <init> ()V
	public fun <init> (I)V
	public synthetic fun <init> (IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDurationMillis ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public fun transition (Lcoil/transition/TransitionTarget;Lcoil/request/ImageResult;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class coil/transition/Transition {
	public static final field Companion Lcoil/transition/Transition$Companion;
	public static final field NONE Lcoil/transition/Transition;
	public abstract fun transition (Lcoil/transition/TransitionTarget;Lcoil/request/ImageResult;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class coil/transition/Transition$Companion {
}

public abstract interface class coil/transition/TransitionTarget : coil/target/Target {
	public abstract fun getDrawable ()Landroid/graphics/drawable/Drawable;
	public abstract fun getView ()Landroid/view/View;
}

public final class coil/transition/TransitionTarget$DefaultImpls {
	public static fun onError (Lcoil/transition/TransitionTarget;Landroid/graphics/drawable/Drawable;)V
	public static fun onStart (Lcoil/transition/TransitionTarget;Landroid/graphics/drawable/Drawable;)V
	public static fun onSuccess (Lcoil/transition/TransitionTarget;Landroid/graphics/drawable/Drawable;)V
}

public final class coil/util/CoilUtils {
	public static final field INSTANCE Lcoil/util/CoilUtils;
	public static final fun clear (Landroid/view/View;)V
	public static final fun createDefaultCache (Landroid/content/Context;)Lokhttp3/Cache;
	public static final fun metadata (Landroid/view/View;)Lcoil/request/ImageResult$Metadata;
}

public final class coil/util/DebugLogger : coil/util/Logger {
	public fun <init> ()V
	public fun <init> (I)V
	public synthetic fun <init> (IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getLevel ()I
	public fun log (Ljava/lang/String;ILjava/lang/String;Ljava/lang/Throwable;)V
	public fun setLevel (I)V
}

public abstract interface class coil/util/Logger {
	public abstract fun getLevel ()I
	public abstract fun log (Ljava/lang/String;ILjava/lang/String;Ljava/lang/Throwable;)V
	public abstract fun setLevel (I)V
}

