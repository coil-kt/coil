// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64, js, macosArm64, macosX64, wasmJs]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <io.coil-kt.coil3:coil-network-ktor>
final val coil3.network.ktor.internal/initHook // coil3.network.ktor.internal/initHook|{}initHook[0]
    final fun <get-initHook>(): kotlin/Any // coil3.network.ktor.internal/initHook.<get-initHook>|<get-initHook>(){}[0]

final fun (io.ktor.client/HttpClient).coil3.network.ktor/asNetworkClient(): coil3.network/NetworkClient // coil3.network.ktor/asNetworkClient|asNetworkClient@io.ktor.client.HttpClient(){}[0]
final fun coil3.network.ktor/KtorNetworkFetcherFactory(): coil3.network/NetworkFetcher.Factory // coil3.network.ktor/KtorNetworkFetcherFactory|KtorNetworkFetcherFactory(){}[0]
final fun coil3.network.ktor/KtorNetworkFetcherFactory(io.ktor.client/HttpClient): coil3.network/NetworkFetcher.Factory // coil3.network.ktor/KtorNetworkFetcherFactory|KtorNetworkFetcherFactory(io.ktor.client.HttpClient){}[0]
final fun coil3.network.ktor/KtorNetworkFetcherFactory(io.ktor.client/HttpClient, coil3.network/CacheStrategy): coil3.network/NetworkFetcher.Factory // coil3.network.ktor/KtorNetworkFetcherFactory|KtorNetworkFetcherFactory(io.ktor.client.HttpClient;coil3.network.CacheStrategy){}[0]
final fun coil3.network.ktor/KtorNetworkFetcherFactory(kotlin/Function0<io.ktor.client/HttpClient>): coil3.network/NetworkFetcher.Factory // coil3.network.ktor/KtorNetworkFetcherFactory|KtorNetworkFetcherFactory(kotlin.Function0<io.ktor.client.HttpClient>){}[0]
final fun coil3.network.ktor/KtorNetworkFetcherFactory(kotlin/Function0<io.ktor.client/HttpClient>, kotlin/Function0<coil3.network/CacheStrategy>): coil3.network/NetworkFetcher.Factory // coil3.network.ktor/KtorNetworkFetcherFactory|KtorNetworkFetcherFactory(kotlin.Function0<io.ktor.client.HttpClient>;kotlin.Function0<coil3.network.CacheStrategy>){}[0]
